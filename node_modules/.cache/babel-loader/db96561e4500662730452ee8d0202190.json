{"ast":null,"code":"var _jsxFileName = \"/media/shoukat/myDrive/Bootcamp/reactjs-chat-app/src/containers/shell/ChatShell.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { conversationChanged, newMessageAdded, conversationDeleted, conversationsRequested } from '../../store/actions';\nimport ConversationSearch from '../../components/conversation/conversation-search/ConversationSearch';\nimport NoConversations from '../../components/conversation/no-conversations/NoConversations';\nimport ConversationList from '../../components/conversation/conversation-list/ConversationList';\nimport NewConversation from '../../components/conversation/new-conversation/NewConversation';\nimport ChatTitle from '../../components/chat-title/ChatTitle';\nimport MessageList from '../message/MessageList';\nimport ChatForm from '../../components/chat-form/ChatForm';\nimport './ChatShell.scss';\n\nconst mapStateToProps = state => {\n  return {\n    conversations: state.conversationState.conversations,\n    selectedConversation: state.conversationState.selectedConversation\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  conversationChanged: conversationId => dispatch(conversationChanged(conversationId)),\n  onMessageSubmitted: messageText => {\n    dispatch(newMessageAdded(messageText));\n  },\n  onDeleteConversation: () => {\n    dispatch(conversationDeleted());\n  },\n  loadConversations: () => {\n    dispatch(conversationsRequested());\n  }\n});\n\nconst ChatShell = ({\n  conversations,\n  selectedConversation,\n  conversationChanged,\n  onMessageSubmitted,\n  onDeleteConversation,\n  loadConversations\n}) => {\n  useEffect(() => {\n    loadConversations();\n  }, [loadConversations]);\n  let conversationContent = React.createElement(React.Fragment, null, React.createElement(NoConversations, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n\n  if (conversations.length > 0) {\n    conversationContent = React.createElement(React.Fragment, null, React.createElement(MessageList, {\n      conversationId: selectedConversation.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    id: \"chat-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ConversationSearch, {\n    conversations: conversations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(ConversationList, {\n    onConversationItemSelected: conversationChanged,\n    conversations: conversations,\n    selectedConversation: selectedConversation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(NewConversation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(ChatTitle, {\n    selectedConversation: selectedConversation,\n    onDeleteConversation: onDeleteConversation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), conversationContent, React.createElement(ChatForm, {\n    selectedConversation: selectedConversation,\n    onMessageSubmitted: onMessageSubmitted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatShell);","map":{"version":3,"sources":["/media/shoukat/myDrive/Bootcamp/reactjs-chat-app/src/containers/shell/ChatShell.js"],"names":["React","useEffect","connect","conversationChanged","newMessageAdded","conversationDeleted","conversationsRequested","ConversationSearch","NoConversations","ConversationList","NewConversation","ChatTitle","MessageList","ChatForm","mapStateToProps","state","conversations","conversationState","selectedConversation","mapDispatchToProps","dispatch","conversationId","onMessageSubmitted","messageText","onDeleteConversation","loadConversations","ChatShell","conversationContent","length","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { conversationChanged, newMessageAdded, conversationDeleted, conversationsRequested } from '../../store/actions';\nimport ConversationSearch from '../../components/conversation/conversation-search/ConversationSearch';\nimport NoConversations from '../../components/conversation/no-conversations/NoConversations';\nimport ConversationList from '../../components/conversation/conversation-list/ConversationList';\nimport NewConversation from '../../components/conversation/new-conversation/NewConversation';\nimport ChatTitle from '../../components/chat-title/ChatTitle';\nimport MessageList from '../message/MessageList';\nimport ChatForm from '../../components/chat-form/ChatForm';\n\nimport './ChatShell.scss';\n\nconst mapStateToProps = state => {\n    return {\n        conversations: state.conversationState.conversations,\n        selectedConversation: state.conversationState.selectedConversation\n    };\n};\n  \nconst mapDispatchToProps = dispatch => ({\n    conversationChanged: conversationId => dispatch(conversationChanged(conversationId)),\n    onMessageSubmitted: messageText => { dispatch(newMessageAdded(messageText)); },\n    onDeleteConversation: () => { dispatch(conversationDeleted()); },\n    loadConversations: () => { dispatch(conversationsRequested())}\n});\n\n\n\nconst ChatShell = ({ \n    conversations, \n    selectedConversation, \n    conversationChanged,\n    onMessageSubmitted,\n    onDeleteConversation,\n    loadConversations\n}) => {\n    useEffect(() => {\n        loadConversations();\n    }, [loadConversations]);\n\n    let conversationContent = (\n        <>\n            <NoConversations></NoConversations>\n        </>\n    );\n\n    if (conversations.length > 0) {\n        conversationContent = (\n            <>\n                <MessageList conversationId={selectedConversation.id} />\n            </>\n        );\n    }\n\n    return (\n        <div id=\"chat-container\">\n            <ConversationSearch conversations={conversations} />\n            <ConversationList\n                onConversationItemSelected={conversationChanged}\n                conversations={conversations}\n                selectedConversation={selectedConversation} />\n            <NewConversation />\n            <ChatTitle \n                selectedConversation={selectedConversation}\n                onDeleteConversation={onDeleteConversation} />\n            {conversationContent}\n            <ChatForm \n                selectedConversation={selectedConversation}\n                onMessageSubmitted={onMessageSubmitted} />\n        </div>\n    );\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatShell);"]},"metadata":{},"sourceType":"module"}